== Paths ==

The initial process is '/system/bin/app_process'.
This means path detection doesn't work.

The application is stored in /data/app/xxx.apk.
AFAICT it's not extracted anywhere, so we need to open it with libzip to extract files.

The application data is in /data/data/org.freedink/{lib,files,cache}/
It can be used to stored additional files.

Last we can use the external storage.


== SDL2 ==

Official documentation is in SDL2/README-android.txt
See also my http://wiki.libsdl.org/Android

=== Pre-requisites ===

* Install minimal Java environment:
 sudo apt-get install openjdk-7-jdk ant
* Install NDK (tested with r9d)
* Install the latest SDK, run 'android' and install API 12

=== Test 1: SDL wrapper for simple programs ===

* Compile a sample app (calls ndk-build):
 cd /usr/src/SDL2/build-scripts/
 ./androidbuild.sh org.libsdl.testgles ../test/testgles.c
* Follow the instructions to install on your device:
 cd /usr/src/SDL2/build/org.libsdl.testgles/
 ant debug install

Notes:
- triple target armeabi/armeabi-v7a/x86 compilation!
- application doesn't quit


=== Test 2: SDL wrapper + SDL_image ===

First, modify showimage.c to show a simple embedded image (e.g. XPM).

To compile:

 cd /usr/src/SDL2/build-scripts/
 ./androidbuild.sh org.libsdl.showimage /usr/src/SDL2_image/showimage.c
 cd /usr/src/SDL2/build/org.libsdl.showimage/
 ln -s /usr/src/SDL2_image jni/
 ln -s /usr/src/SDL2_image/external/libwebp-0.3.0 jni/webp
 # - Edit jni/Android.mk
 #   LOCAL_SHARED_LIBRARIES := ... SDL2_image
 # - Edit android-project/src/org/libsdl/app/SDLActivity.java:
 #   System.loadLibrary("SDL2_image");
 #   System.loadLibrary("SDL2_mixer");
 #   System.loadLibrary("SDL2_ttf");
 # - Edit jni/Application.mk: remove x86 where jpeg-9 doesn't build
 ndk-build -j$(nproc)
 ant debug install

Notes:
- application doesn't restart properly


== Static SDL2 build ==

cd /usr/src/SDL2/
cp -a android-project/jni/src/Android_static.mk android-project/jni/src/Android.mk
cd build-scripts/
export NDK_MODULE_PATH=jni
./androidbuild.sh org.libsdl /dev/null
=> weird error about SDL being already defined in the same file...
cd ../build/org.libsdl/
cp -a libs/armeabi-v7a/libSDL2.a ...


=== SDL + .pc ===

# SDL only
cd /usr/src/SDL2/
cd build-scripts/
./androidbuild.sh org.libsdl /dev/null
cd ../build/org.libsdl/
cp -a libs/armeabi-v7a/libSDL2.so /usr/src/ndk-standalone-12-arm/sysroot/usr/lib

# SDL + SDL_*
cd /usr/src/SDL2/
cd build-scripts/
./androidbuild.sh org.libsdl /dev/null
cd ../build/org.libsdl/
rm -rf jni/src/
ln -s /usr/src/SDL2_image jni/
ln -s /usr/src/SDL2_image/external/libwebp-0.3.0 jni/webp
ln -s /usr/src/SDL2_mixer jni/
ln -s /usr/src/SDL2_mixer/external/libmikmod-3.1.12 jni/libmikmod
#ln -s /usr/src/SDL2_mixer/external/smpeg2-2.0.0 jni/smpeg2
ln -s /usr/src/SDL2_ttf jni/
(echo "SUPPORT_MP3_SMPEG := false"; cat jni/Android.mk) | sponge jni/Android.mk
ndk-build -j$(nproc)
for i in libs/armeabi/*; do ln -nfs $(pwd)/$i /usr/src/ndk-standalone-12-arm/sysroot/usr/lib/; done
mkdir /usr/src/ndk-standalone-12-arm/sysroot/usr/include/SDL2/
cp jni/SDL/include/* /usr/src/ndk-standalone-12-arm/sysroot/usr/include/SDL2/
cp jni/*/SDL*.h /usr/src/ndk-standalone-12-arm/sysroot/usr/include/SDL2/

cat <<'EOF' > /usr/src/ndk-standalone-12-arm/sysroot/usr/lib/pkgconfig/sdl2.pc
prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include
Name: sdl2
Description: Simple DirectMedia Layer is a cross-platform multimedia library designed to provide low level access to audio, keyboard, mouse, joystick, 3D hardware via OpenGL, and 2D video framebuffer.
Version: 2.0.3
Requires:
Conflicts:
Libs: -lSDL2
Cflags: -I${includedir}/SDL2   -D_REENTRANT
EOF

cat <<'EOF' > /usr/src/ndk-standalone-12-arm/sysroot/usr/lib/pkgconfig/SDL2_image.pc
prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include
Name: SDL2_image
Description: image loading library for Simple DirectMedia Layer
Version: 2.0.1
Requires: sdl2 >= 2.0.0
Libs: -L${libdir} -lSDL2_image
Cflags: -I${includedir}/SDL2
EOF

cat <<'EOF' > /usr/src/ndk-standalone-12-arm/sysroot/usr/lib/pkgconfig/SDL2_mixer.pc
prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include
Name: SDL2_mixer
Description: mixer library for Simple DirectMedia Layer
Version: 2.0.1
Requires: sdl2 >= 2.0.0
Libs: -L${libdir} -lSDL2_mixer
Cflags: -I${includedir}/SDL2
EOF

cat <<'EOF' > /usr/src/ndk-standalone-12-arm/sysroot/usr/lib/pkgconfig/SDL2_ttf.pc
prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include
Name: SDL2_ttf
Description: ttf library for Simple DirectMedia Layer with FreeType 2 support
Version: 2.0.13
Requires: sdl2 >= 2.0.0
Libs: -L${libdir} -lSDL2_ttf
Cflags: -I${includedir}/SDL2
EOF


VERSION=1.0.1
$WGET http://www.ferzkopp.net/Software/SDL2_gfx/SDL2_gfx-$VERSION.tar.gz
tar xf SDL2_gfx-$VERSION.tar.gz
mv SDL2_gfx-$VERSION/ SDL2_gfx/
cd SDL2_gfx/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared --disable-mmx
make -j$(nproc)
make install



=== pgk-config ===

VERSION=0.9.6
$WGET http://rabbit.dereferenced.org/~nenolod/distfiles/pkgconf-$VERSION.tar.gz
tar xf pkgconf-$VERSION.tar.gz
cd pkgconf-$VERSION
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr
make -j$(nproc)
make install
ln -s ../sysroot/usr/bin/pkgconf /usr/src/ndk-standalone-12-arm/bin/arm-linux-androideabi-pkg-config
mkdir /usr/src/ndk-standalone-12-arm/sysroot/usr/lib/pkgconfig/


=== iconv ===

VERSION=0.14
$WGET http://ftp.gnu.org/pub/gnu/libiconv/libiconv-$VERSION.tar.gz
tar xf libiconv-$VERSION.tar.gz
cd libiconv-$VERSION/
mkdir cross-android/ && cd cross-android/
\cp -a /usr/share/misc/config.{guess,sub} ../build-aux/
\cp -a /usr/share/misc/config.{guess,sub} ../libcharset/build-aux/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install


=== gettext ===

VERSION=0.19.1
$WGET http://ftp.gnu.org/pub/gnu/gettext/gettext-$VERSION.tar.gz
tar xf gettext-$VERSION.tar.gz
cd gettext-$VERSION/
cd gettext-runtime/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install


=== Check ===

VERSION=0.9.13
$WGET http://downloads.sourceforge.net/project/check/check/0.9.13/check-0.9.13.tar.gz
tar xf check-$VERSION.tar.gz
cd check-$VERSION/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr
make -j($nproc)
=>
../../lib/snprintf.c:526:1: warning: function declaration isn't a prototype [-Wstrict-prototypes]
../../lib/snprintf.c:526:12: error: conflicting types for '__errno'


=== FreeDink ===


/usr/src/android-ndk-r9d/build/tools/make-standalone-toolchain.sh \
  --platform=android-12 --install-dir=/usr/src/ndk-standalone-12
PATH=/usr/src/ndk-standalone-12-arm/bin:$PATH
mkdir cross-android/
cd cross-android/
../configure --host=arm-linux-androideabi \
  --prefix=/data/data/org.freedink/files \
  --disable-embedded-resources --disable-tests
make -j8

# To see dynamic symbols:
arm-linux-androideabi-objdump -R src/freedink
# To simulate 'ldd':
arm-linux-androideabi-objdump -x libs/armeabi/libnative-activity.so | grep NEEDED
arm-linux-androideabi-readelf -d libs/armeabi/libnative-activity.so | grep NEEDED  # alternatively

cp -a /usr/src/SDL2/android-project android

ant clean
rm -rf libs/ bin/ gen/
mkdir -p libs/armeabi/
cp -a /usr/src/SDL2/build/org.libsdl/libs/armeabi/* libs/armeabi/
cp -a ../cross-android/src/freedink libs/armeabi/libmain.so
android update project --name freedink --path . --target "android-12"
echo '<?xml version="1.0" encoding="utf-8"?><resources><string name="app_name">FreeDink</string></resources>' > res/values/strings.xml
./redeploy.sh

adb push dink.tar.gz /data/data/org.freedink/files/share/dink/

cp -a /usr/share/midi/freepats .
cp -a /etc/timidity/freepats.cfg timidity.cfg
sed -i -e 's,/usr/share/midi/,,' timidity.cfg
tar czf timidity.tar.gz freepats/ timidity.cfg
rm -rf freepats/ timidity.cfg
adb push timidity.tar.gz /data/data/org.freedink/files/

chown -R u0_aXX: files /data/data/org.freedink/files


=== Guile ===

/usr/src/android-ndk-r9d/build/tools/make-standalone-toolchain.sh \
  --platform=android-12 --install-dir=/usr/src/ndk-standalone-12
PATH=/usr/src/ndk-standalone-12-arm/bin:$PATH

aptitude install lzip
WGET=wget

VERSION=2.4.2
$WGET http://ftp.gnu.org/pub/gnu/libtool/libtool-$VERSION.tar.xz
tar xf libtool-$VERSION.tar.xz
cd libtool-$VERSION/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install

VERSION=6.0.0a
VERSIONDIR=6.0.0
$WGET https://gmplib.org/download/gmp/gmp-$VERSION.tar.lz
tar xf gmp-$VERSION.tar.lz
cd gmp-$VERSIONDIR/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install

VERSION=0.9.3
$WGET http://ftp.gnu.org/gnu/libunistring/libunistring-0.9.3.tar.gz
tar xf libunistring-$VERSION.tar.gz
mkdir cross-android/ && cd cross-android/
\cp -a /usr/share/misc/config.{guess,sub} ../build-aux/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install

VERSION=3.1
$WGET ftp://sourceware.org/pub/libffi/libffi-$VERSION.tar.gz
tar xf libffi-$VERSION.tar.gz
cd libffi-$VERSION/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install


VERSION=7.4.2
$WGET http://www.ivmaisoft.com/_bin/atomic_ops/libatomic_ops-$VERSION.tar.gz
tar xf libatomic_ops-$VERSION.tar.gz
cd libatomic_ops-$VERSION/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install
cd ../..
$WGET http://www.hboehm.info/gc/gc_source/gc-$VERSION.tar.gz
tar xf gc-$VERSION.tar.gz
cd gc-$VERSION/
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
make install


cd guile/cross-android/
git checkout stable-2.0
mkdir cross-android/ && cd cross-android/
../configure --host=arm-linux-androideabi --prefix=/usr/src/ndk-standalone-12-arm/sysroot/usr \
  --disable-shared
make -j$(nproc)
=> build failure due to Android's pthread_cancel
